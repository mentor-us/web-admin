name: End-to-end Testings

on:
  push:
    branches:
      - 'develop'
    paths: 
      - "src/src/**"
      - "src/cypress/e2e/*.cy.js"
      
  workflow_dispatch:
    inputs:
      N:
        description: "Number of parallel jobs to run tests in"
        required: true
        type: number
        default: 3

env:
  SPLIT_TIMING_FILE: timings.json

jobs:
  build-server-local:
      uses: ./.github/workflows/build-server-local.yml
      secrets: inherit

  prepare:
    runs-on: ubuntu-latest    
    outputs:
      matrix: ${{ steps.prepare-matrix.outputs.matrix }}
    steps:
      - name: Create matrix ‚äπ
        id: prepare-matrix
        # for reusable workflow, must use the full action reference
        uses: bahmutov/gh-build-matrix@main
        with:
          n: ${{ inputs.N }}

      - name: Checkout üõé
        uses: actions/checkout@v4

      - uses: cypress-io/github-action@v6
        with:
          working-directory: src
          runTests: false

  test:
    runs-on: ubuntu-latest
    needs: [build-server-local, prepare]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    services:
      mongodb:  
        image: mongo:latest
        ports:
        - 27017:27017
        env:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: mentordb
        options: --name mongodb
    defaults:
      run:
        working-directory: src
        
    steps:
      - name: Checkout üõé
        uses: actions/checkout@v4
     
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
        
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build-server-local.outputs.artifact_name }}
          path: src/${{ needs.build-server-local.outputs.artifact_name }}

      - name: Start Server
        run: |
          cd ${{ needs.build-server-local.outputs.artifact_name }}
          java -Djarmode=layertools -jar ./app.jar extract
          nohup java -jar app.jar 1>/dev/null 2>&1 &

      - name: Install 1Password CLI üîí
        uses: 1password/install-cli-action@v1

      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          PAT_GITHUB_TOKEN: op://mentorus/github-pat-publish-package/token

      - name: Inject secret with 1Password
        run: |
          export OP_SERVICE_ACCOUNT_TOKEN=${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          op inject -i ./cypress.env.json.tpl -o ./cypress.env.json

      - name: Cypress run split üß™
        uses: cypress-io/github-action@v6
        with:
          working-directory: src
          start: yarn start
          wait-on: "http://localhost:3000, http://localhost:8080/swagger-ui/index.html"
          wait-on-timeout: 180
          browser: chrome
          headed: true
          spec: "cypress/e2e/**.cy.js"
          publish-summary: false
          env: JIRA_TEST_EXECUTION_ISSUE_KEY="MU-88",XRAY_UPLOAD_RESULTS=true
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          SPLIT_FILE: ${{ env.SPLIT_TIMING_FILE }}
          CYPRESS_PLUGIN_DEBUG: true
          CYPRESS_JIRA_TEST_PLAN_ISSUE_KEY: "MU-85"

      # Upload screenshots and videos as artifacts if the tests fail
      - name: Upload failed screenshots as artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 7
          if-no-files-found: ignore 

      - name: Upload failed videos as artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 7
          if-no-files-found: ignore 

      - name: Upload timings as artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-split-results-${{ strategy.job-index }}
          path: src/${{ env.SPLIT_TIMING_FILE }}
          retention-days: 1
          if-no-files-found: ignore


  merge-split-timings:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    continue-on-error: true
    outputs:
      timings: ${{ steps.merge.outputs.merged-timings }}
    defaults:
      run:
        working-directory: src
    steps:
      - name: Checkout üõé
        uses: actions/checkout@v4

      - name: Install dependencies üß™
        uses: cypress-io/github-action@v6
        with:
          working-directory: src
          runTests: false
          
      - uses: actions/download-artifact@v3
        with:
          path: src/split-results

      - name: Display structure of downloaded files
        run: ls -R split-results

      # to merge timings you need v1.13+ of cypress-split
      - name: Merge split timings
        id: merge
        run: |
          npx cypress-split-merge \
            --parent-folder split-results \
            --split-file ${{ env.SPLIT_TIMING_FILE }} \
            --output ${{ env.SPLIT_TIMING_FILE }} \
            --set-gha-output merged-timings

      - name: Print timings üñ®Ô∏è
        run: |
          echo off
          echo Merged timings
          echo '${{ steps.merge.outputs.merged-timings }}'

      - name: Commit changed spec timings ‚è±Ô∏è
        # https://github.com/stefanzweifel/git-auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[AUTO] Updated spec timings"
          file_pattern: timings.json