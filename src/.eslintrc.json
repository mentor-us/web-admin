{
  "env": {
    "browser": true,
    "es2021": true,
    "cypress/globals": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "airbnb",
    "plugin:prettier/recommended",
    "plugin:import/recommended",
    "plugin:cypress/recommended"
  ],

  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "prettier", "simple-import-sort", "import", "cypress"],
  "rules": {
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "default-param-last": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    "react/jsx-props-no-spreading": [
      1,
      {
        "custom": "ignore"
      }
    ],
    "react/jsx-curly-spacing": [2, "never"],
    "cypress/no-assigning-return-values": "error",
    "cypress/no-unnecessary-waiting": "error",
    "cypress/assertion-before-screenshot": "warn",
    "cypress/no-force": "warn",
    "cypress/no-async-tests": "error",
    "cypress/no-pause": "error",
    "import/no-extraneous-dependencies": "off"
  },
  "settings": {
    "import/resolver": {
      "node": { "paths": ["src", "src/src"], "extensions": [".js", ".jsx"] }
    }
  },
  "overrides": [
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Side effect imports and Internal packages.
              ["^\\u0000", "^\\w+$", "^assets", "^api", "^templates"],
              // Internal packages.
              ["^layouts", "^pages", "^components", "^service", "^hooks", "^utils"],
              // Redux
              ["^redux"],
              // Error import
              ["^errors"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$", "^.+\\.?(css)$"]
            ]
          }
        ]
      }
    },
    {
      "files": ["./src/redux/**/*.js", "./redux/**/*.js"],
      "rules": { "no-param-reassign": ["error", { "props": false }] }
    }
  ]
}
